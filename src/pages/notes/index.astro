---
import { format, parseISO } from 'date-fns';

import BaseLayout from '@src/layouts/baseLayout/BaseLayout.astro';
import NavBar from '@src/lib/astro/nav-bar/NavBar.astro';
import type { Metadata } from '@src/lib/types/notes';

const notes: { [key: string]: { route: string; metadata: Metadata }[] } = {};
const metadataPaths = import.meta.glob('/src/text/notes/**/metadata.ts', { import: 'metadata' });
const pathPattern = /^\/src\/text\/notes\/(?<year>\d\d\d\d)\/(?<slug>[^/]+)\/metadata.ts$/;
for (const [path, metadataT] of Object.entries(metadataPaths)) {
  const match = path.match(pathPattern);
  if (!match || !match.groups) {
    throw new Error('Invalid path globbed.');
  }
  const pathYear = match.groups.year;
  if (!notes[pathYear]) notes[pathYear] = [];
  const metadata = (await metadataT()) as Metadata;
  notes[pathYear].push({
    route: `/notes/${pathYear}/${match.groups.slug}`,
    metadata
  });
}
---

<BaseLayout title="Notes">
  <Fragment slot="head"></Fragment>
  <Fragment slot="body">
    <NavBar url={Astro.url} />
    <h1 class="mb-3 text-5xl font-bold">Notes</h1>
    <ul>
      {
        Object.keys(notes)
          .sort((a, b) => b.localeCompare(a))
          .map((year) => (
            <li>
              <h2 class="mt-6 text-2xl">{year}</h2>
              <ul>
                {notes[year]
                  .sort((a, b) => b.metadata.publishedDate.localeCompare(a.metadata.publishedDate))
                  .map(({ route, metadata }) => (
                    <li class="mb-3">
                      <span class="text-gray-600">
                        {format(parseISO(metadata.publishedDate), 'MMM dd, yyyy')}
                      </span>{' '}
                      â†´
                      <br />
                      <a class="text-blue-800 underline hover:text-blue-500" href={route}>
                        {metadata.title}
                      </a>
                    </li>
                  ))}
              </ul>
            </li>
          ))
      }
    </ul>
  </Fragment>
</BaseLayout>
